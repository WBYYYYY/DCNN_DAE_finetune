function GraspFunc_WriteTOR(index)
    global frequency distance sim_name;
    fid = fopen([sim_name num2str(index) '.tor'], 'w');
    %% 反射面建模
    fprintf(fid,"Reflector_1  reflector  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  coor_sys         : ref(Global_Coor_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  surface          : ref(Surface00001),");
    fprintf(fid,'\n');
    fprintf(fid,"  rim              : ref(Refl_Rim_1)");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Global_Coor_1  coor_sys  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Refl_Surface_1  paraboloid  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  focal_length     :    33.00000000     m");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Refl_Rim_1  elliptical_rim  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  half_axis        : struct(x:    55.00000000     m,y:    55.00000000     m)");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Feed_1  gaussian_beam_pattern  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  frequency        : ref(Frequency_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  coor_sys         : ref(Coor_Sys_Feed_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  taper_angle      :    79.61114286    ,");
    fprintf(fid,'\n');
    fprintf(fid,"  taper            :   -12.00000000    ");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    %% 频率
    fprintf(fid,"Frequency_1  frequency  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  frequency_list   : sequence(  ");
    fprintf(fid, num2str(frequency));
    fprintf(fid, "     GHz)");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Coor_Sys_Feed_1  coor_sys  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  origin           : struct(x:    0.000000000     m,y:    0.000000000     m,z:    33.00000000     m),");
    fprintf(fid,'\n');
    fprintf(fid,"  y_axis           : struct(x:    0.000000000    ,y:   -1.000000000    ,z:    0.000000000    ),");
    fprintf(fid,'\n');
    fprintf(fid,"  base             : ref(Global_Coor_1)");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Field_Cuts_1  spherical_cut  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  frequency        : ref(Frequency_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  coor_sys         : ref(Coor_Sys_Cut_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  theta_range      : struct(start:   -2.602551927    ,end:    2.602551927    ,np:   161),");
    fprintf(fid,'\n');
    fprintf(fid,"  phi_range        : struct(start:    0.000000000    ,end:    90.00000000    ,np:     2),");
    fprintf(fid,'\n');
    fprintf(fid,"  file_name        : sph_1.cut");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Coor_Sys_Cut_1  coor_sys  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  base             : ref(Global_Coor_1)");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"PO_Calc_1  po_single_face_scatterer  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  frequency        : ref(Frequency_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  scatterer        : ref(Reflector_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  coor_sys         : ref(Global_Coor_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  file_name        : po_");
    fprintf(fid, num2str(index));
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Surface00001  irregular_xy_grid_triangulation  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid, "  file_name        : Surface");
    a = num2str(index);
    for i=1:5-length(a)
        a = ['0' a];
    end
    fprintf(fid, a);
    fprintf(fid, ".sfc");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"Field1  planar_grid  ");
    fprintf(fid,'\n');
    fprintf(fid,"(");
    fprintf(fid,'\n');
    fprintf(fid,"  frequency        : ref(Frequency_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  coor_sys         : ref(Global_Coor_1),");
    fprintf(fid,'\n');
    fprintf(fid,"  near_dist        :    ");
    fprintf(fid, sprintf('%f',distance));
    fprintf(fid, "     m,");
    fprintf(fid,'\n');
    fprintf(fid,"  x_range          : struct(start:   -55.00000000    ,end:    55.00000000    ,np:   128,unit: m),");
    fprintf(fid,'\n');
    fprintf(fid,"  y_range          : struct(start:   -55.00000000    ,end:    55.00000000    ,np:   128),");
    fprintf(fid,'\n');
    fprintf(fid,"  file_name        : ");
    fprintf(fid, sim_name);
    fprintf(fid, num2str(index));
    fprintf(fid, ".grd");
    fprintf(fid,'\n');
    fprintf(fid,")");
    fprintf(fid,'\n');
    fprintf(fid," ");
    fprintf(fid,'\n');
    fprintf(fid,"  //$$ Saved at 22:28:49 on 04.07.2021 by GRASP9 ver. 9.3.03 SN=00099 ");
    fprintf(fid,'\n');
    fprintf(fid,"  ");
    fprintf(fid,'\n');
    fclose(fid);
end